// Code generated by goctl. DO NOT EDIT!
// Source: stock.proto

package server

import (
	"context"

	"stockexchange/rpc/stock/internal/logic"
	"stockexchange/rpc/stock/internal/svc"
	"stockexchange/rpc/stock/stock"
)

type StockServer struct {
	svcCtx *svc.ServiceContext
}

func NewStockServer(svcCtx *svc.ServiceContext) *StockServer {
	return &StockServer{
		svcCtx: svcCtx,
	}
}

func (s *StockServer) GetStockList(ctx context.Context, in *stock.PageInfo) (*stock.StockListResponse, error) {
	l := logic.NewGetStockListLogic(ctx, s.svcCtx)
	return l.GetStockList(in)
}

func (s *StockServer) GetStockByCode(ctx context.Context, in *stock.CodeRequest) (*stock.StockInfoResponse, error) {
	l := logic.NewGetStockByCodeLogic(ctx, s.svcCtx)
	return l.GetStockByCode(in)
}

func (s *StockServer) GetStockByName(ctx context.Context, in *stock.NameRequest) (*stock.StockInfoResponse, error) {
	l := logic.NewGetStockByNameLogic(ctx, s.svcCtx)
	return l.GetStockByName(in)
}

func (s *StockServer) GetStockById(ctx context.Context, in *stock.IdRequest) (*stock.StockInfoResponse, error) {
	l := logic.NewGetStockByIdLogic(ctx, s.svcCtx)
	return l.GetStockById(in)
}

func (s *StockServer) CreateStock(ctx context.Context, in *stock.CreateStockInfo) (*stock.StockInfoResponse, error) {
	l := logic.NewCreateStockLogic(ctx, s.svcCtx)
	return l.CreateStock(in)
}

func (s *StockServer) UpdateStock(ctx context.Context, in *stock.UpdateStockInfo) (*stock.Empty, error) {
	l := logic.NewUpdateStockLogic(ctx, s.svcCtx)
	return l.UpdateStock(in)
}
