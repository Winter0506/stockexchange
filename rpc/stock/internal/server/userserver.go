// Code generated by goctl. DO NOT EDIT!
// Source: stock.proto

package server

import (
	"context"

	"stockexchange/rpc/stock/internal/logic"
	"stockexchange/rpc/stock/internal/svc"
	"stockexchange/rpc/stock/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) GetStockList(ctx context.Context, in *user.PageInfo) (*user.StockListResponse, error) {
	l := logic.NewGetStockListLogic(ctx, s.svcCtx)
	return l.GetStockList(in)
}

func (s *UserServer) GetStockByCode(ctx context.Context, in *user.CodeRequest) (*user.StockInfoResponse, error) {
	l := logic.NewGetStockByCodeLogic(ctx, s.svcCtx)
	return l.GetStockByCode(in)
}

func (s *UserServer) GetStockByName(ctx context.Context, in *user.NameRequest) (*user.StockInfoResponse, error) {
	l := logic.NewGetStockByNameLogic(ctx, s.svcCtx)
	return l.GetStockByName(in)
}

func (s *UserServer) GetStockById(ctx context.Context, in *user.IdRequest) (*user.StockInfoResponse, error) {
	l := logic.NewGetStockByIdLogic(ctx, s.svcCtx)
	return l.GetStockById(in)
}

func (s *UserServer) CreateStock(ctx context.Context, in *user.CreateStockInfo) (*user.StockInfoResponse, error) {
	l := logic.NewCreateStockLogic(ctx, s.svcCtx)
	return l.CreateStock(in)
}

func (s *UserServer) UpdateStock(ctx context.Context, in *user.UpdateStockInfo) (*user.Empty, error) {
	l := logic.NewUpdateStockLogic(ctx, s.svcCtx)
	return l.UpdateStock(in)
}
