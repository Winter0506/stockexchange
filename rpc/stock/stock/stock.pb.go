// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stock.proto

package stock

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Timestamp from public import google/protobuf/timestamp.proto
type Timestamp = timestamp.Timestamp

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type PageInfo struct {
	Pn                   uint32   `protobuf:"varint,1,opt,name=pn,proto3" json:"pn,omitempty"`
	PSize                uint32   `protobuf:"varint,2,opt,name=pSize,proto3" json:"pSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageInfo) Reset()         { *m = PageInfo{} }
func (m *PageInfo) String() string { return proto.CompactTextString(m) }
func (*PageInfo) ProtoMessage()    {}
func (*PageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{1}
}

func (m *PageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageInfo.Unmarshal(m, b)
}
func (m *PageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageInfo.Marshal(b, m, deterministic)
}
func (m *PageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageInfo.Merge(m, src)
}
func (m *PageInfo) XXX_Size() int {
	return xxx_messageInfo_PageInfo.Size(m)
}
func (m *PageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PageInfo proto.InternalMessageInfo

func (m *PageInfo) GetPn() uint32 {
	if m != nil {
		return m.Pn
	}
	return 0
}

func (m *PageInfo) GetPSize() uint32 {
	if m != nil {
		return m.PSize
	}
	return 0
}

type CodeRequest struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CodeRequest) Reset()         { *m = CodeRequest{} }
func (m *CodeRequest) String() string { return proto.CompactTextString(m) }
func (*CodeRequest) ProtoMessage()    {}
func (*CodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{2}
}

func (m *CodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CodeRequest.Unmarshal(m, b)
}
func (m *CodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CodeRequest.Marshal(b, m, deterministic)
}
func (m *CodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CodeRequest.Merge(m, src)
}
func (m *CodeRequest) XXX_Size() int {
	return xxx_messageInfo_CodeRequest.Size(m)
}
func (m *CodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CodeRequest proto.InternalMessageInfo

func (m *CodeRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type NameRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NameRequest) Reset()         { *m = NameRequest{} }
func (m *NameRequest) String() string { return proto.CompactTextString(m) }
func (*NameRequest) ProtoMessage()    {}
func (*NameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{3}
}

func (m *NameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameRequest.Unmarshal(m, b)
}
func (m *NameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameRequest.Marshal(b, m, deterministic)
}
func (m *NameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameRequest.Merge(m, src)
}
func (m *NameRequest) XXX_Size() int {
	return xxx_messageInfo_NameRequest.Size(m)
}
func (m *NameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NameRequest proto.InternalMessageInfo

func (m *NameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type IdRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdRequest) Reset()         { *m = IdRequest{} }
func (m *IdRequest) String() string { return proto.CompactTextString(m) }
func (*IdRequest) ProtoMessage()    {}
func (*IdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{4}
}

func (m *IdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdRequest.Unmarshal(m, b)
}
func (m *IdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdRequest.Marshal(b, m, deterministic)
}
func (m *IdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdRequest.Merge(m, src)
}
func (m *IdRequest) XXX_Size() int {
	return xxx_messageInfo_IdRequest.Size(m)
}
func (m *IdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IdRequest proto.InternalMessageInfo

func (m *IdRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CreateStockInfo struct {
	StockName            string   `protobuf:"bytes,1,opt,name=stockName,proto3" json:"stockName,omitempty"`
	StockCode            string   `protobuf:"bytes,2,opt,name=stockCode,proto3" json:"stockCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateStockInfo) Reset()         { *m = CreateStockInfo{} }
func (m *CreateStockInfo) String() string { return proto.CompactTextString(m) }
func (*CreateStockInfo) ProtoMessage()    {}
func (*CreateStockInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{5}
}

func (m *CreateStockInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateStockInfo.Unmarshal(m, b)
}
func (m *CreateStockInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateStockInfo.Marshal(b, m, deterministic)
}
func (m *CreateStockInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateStockInfo.Merge(m, src)
}
func (m *CreateStockInfo) XXX_Size() int {
	return xxx_messageInfo_CreateStockInfo.Size(m)
}
func (m *CreateStockInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateStockInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CreateStockInfo proto.InternalMessageInfo

func (m *CreateStockInfo) GetStockName() string {
	if m != nil {
		return m.StockName
	}
	return ""
}

func (m *CreateStockInfo) GetStockCode() string {
	if m != nil {
		return m.StockCode
	}
	return ""
}

type UpdateStockInfo struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StockName            string   `protobuf:"bytes,2,opt,name=stockName,proto3" json:"stockName,omitempty"`
	StockCode            string   `protobuf:"bytes,3,opt,name=stockCode,proto3" json:"stockCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateStockInfo) Reset()         { *m = UpdateStockInfo{} }
func (m *UpdateStockInfo) String() string { return proto.CompactTextString(m) }
func (*UpdateStockInfo) ProtoMessage()    {}
func (*UpdateStockInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{6}
}

func (m *UpdateStockInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateStockInfo.Unmarshal(m, b)
}
func (m *UpdateStockInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateStockInfo.Marshal(b, m, deterministic)
}
func (m *UpdateStockInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateStockInfo.Merge(m, src)
}
func (m *UpdateStockInfo) XXX_Size() int {
	return xxx_messageInfo_UpdateStockInfo.Size(m)
}
func (m *UpdateStockInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateStockInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateStockInfo proto.InternalMessageInfo

func (m *UpdateStockInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateStockInfo) GetStockName() string {
	if m != nil {
		return m.StockName
	}
	return ""
}

func (m *UpdateStockInfo) GetStockCode() string {
	if m != nil {
		return m.StockCode
	}
	return ""
}

type BasicInfo struct {
	// 基础信息
	TodayOpenPrice       float32  `protobuf:"fixed32,1,opt,name=todayOpenPrice,proto3" json:"todayOpenPrice,omitempty"`
	LastClosePrice       float32  `protobuf:"fixed32,2,opt,name=lastClosePrice,proto3" json:"lastClosePrice,omitempty"`
	PresentPrice         float32  `protobuf:"fixed32,3,opt,name=presentPrice,proto3" json:"presentPrice,omitempty"`
	HighPrice            float32  `protobuf:"fixed32,4,opt,name=highPrice,proto3" json:"highPrice,omitempty"`
	LowPrice             float32  `protobuf:"fixed32,5,opt,name=lowPrice,proto3" json:"lowPrice,omitempty"`
	CurrentBuyPrice      float32  `protobuf:"fixed32,6,opt,name=currentBuyPrice,proto3" json:"currentBuyPrice,omitempty"`
	CurrentSellPrice     float32  `protobuf:"fixed32,7,opt,name=currentSellPrice,proto3" json:"currentSellPrice,omitempty"`
	TransCount           int32    `protobuf:"varint,8,opt,name=transCount,proto3" json:"transCount,omitempty"`
	TransAmount          float32  `protobuf:"fixed32,9,opt,name=transAmount,proto3" json:"transAmount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BasicInfo) Reset()         { *m = BasicInfo{} }
func (m *BasicInfo) String() string { return proto.CompactTextString(m) }
func (*BasicInfo) ProtoMessage()    {}
func (*BasicInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{7}
}

func (m *BasicInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BasicInfo.Unmarshal(m, b)
}
func (m *BasicInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BasicInfo.Marshal(b, m, deterministic)
}
func (m *BasicInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BasicInfo.Merge(m, src)
}
func (m *BasicInfo) XXX_Size() int {
	return xxx_messageInfo_BasicInfo.Size(m)
}
func (m *BasicInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BasicInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BasicInfo proto.InternalMessageInfo

func (m *BasicInfo) GetTodayOpenPrice() float32 {
	if m != nil {
		return m.TodayOpenPrice
	}
	return 0
}

func (m *BasicInfo) GetLastClosePrice() float32 {
	if m != nil {
		return m.LastClosePrice
	}
	return 0
}

func (m *BasicInfo) GetPresentPrice() float32 {
	if m != nil {
		return m.PresentPrice
	}
	return 0
}

func (m *BasicInfo) GetHighPrice() float32 {
	if m != nil {
		return m.HighPrice
	}
	return 0
}

func (m *BasicInfo) GetLowPrice() float32 {
	if m != nil {
		return m.LowPrice
	}
	return 0
}

func (m *BasicInfo) GetCurrentBuyPrice() float32 {
	if m != nil {
		return m.CurrentBuyPrice
	}
	return 0
}

func (m *BasicInfo) GetCurrentSellPrice() float32 {
	if m != nil {
		return m.CurrentSellPrice
	}
	return 0
}

func (m *BasicInfo) GetTransCount() int32 {
	if m != nil {
		return m.TransCount
	}
	return 0
}

func (m *BasicInfo) GetTransAmount() float32 {
	if m != nil {
		return m.TransAmount
	}
	return 0
}

type FiveBuyInfo struct {
	// 买的 五个
	BuyOneCount          int32    `protobuf:"varint,1,opt,name=buyOneCount,proto3" json:"buyOneCount,omitempty"`
	BuyOnePrice          float32  `protobuf:"fixed32,2,opt,name=buyOnePrice,proto3" json:"buyOnePrice,omitempty"`
	BuyTwoCount          int32    `protobuf:"varint,3,opt,name=buyTwoCount,proto3" json:"buyTwoCount,omitempty"`
	BuyTwoPrice          float32  `protobuf:"fixed32,4,opt,name=buyTwoPrice,proto3" json:"buyTwoPrice,omitempty"`
	BuyThreeCount        int32    `protobuf:"varint,5,opt,name=buyThreeCount,proto3" json:"buyThreeCount,omitempty"`
	BuyThreePrice        float32  `protobuf:"fixed32,6,opt,name=buyThreePrice,proto3" json:"buyThreePrice,omitempty"`
	BuyFourCount         int32    `protobuf:"varint,7,opt,name=buyFourCount,proto3" json:"buyFourCount,omitempty"`
	BuyFourPrice         float32  `protobuf:"fixed32,8,opt,name=buyFourPrice,proto3" json:"buyFourPrice,omitempty"`
	BuyFiveCount         int32    `protobuf:"varint,9,opt,name=buyFiveCount,proto3" json:"buyFiveCount,omitempty"`
	BuyFivePrice         float32  `protobuf:"fixed32,10,opt,name=buyFivePrice,proto3" json:"buyFivePrice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FiveBuyInfo) Reset()         { *m = FiveBuyInfo{} }
func (m *FiveBuyInfo) String() string { return proto.CompactTextString(m) }
func (*FiveBuyInfo) ProtoMessage()    {}
func (*FiveBuyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{8}
}

func (m *FiveBuyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FiveBuyInfo.Unmarshal(m, b)
}
func (m *FiveBuyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FiveBuyInfo.Marshal(b, m, deterministic)
}
func (m *FiveBuyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FiveBuyInfo.Merge(m, src)
}
func (m *FiveBuyInfo) XXX_Size() int {
	return xxx_messageInfo_FiveBuyInfo.Size(m)
}
func (m *FiveBuyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FiveBuyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FiveBuyInfo proto.InternalMessageInfo

func (m *FiveBuyInfo) GetBuyOneCount() int32 {
	if m != nil {
		return m.BuyOneCount
	}
	return 0
}

func (m *FiveBuyInfo) GetBuyOnePrice() float32 {
	if m != nil {
		return m.BuyOnePrice
	}
	return 0
}

func (m *FiveBuyInfo) GetBuyTwoCount() int32 {
	if m != nil {
		return m.BuyTwoCount
	}
	return 0
}

func (m *FiveBuyInfo) GetBuyTwoPrice() float32 {
	if m != nil {
		return m.BuyTwoPrice
	}
	return 0
}

func (m *FiveBuyInfo) GetBuyThreeCount() int32 {
	if m != nil {
		return m.BuyThreeCount
	}
	return 0
}

func (m *FiveBuyInfo) GetBuyThreePrice() float32 {
	if m != nil {
		return m.BuyThreePrice
	}
	return 0
}

func (m *FiveBuyInfo) GetBuyFourCount() int32 {
	if m != nil {
		return m.BuyFourCount
	}
	return 0
}

func (m *FiveBuyInfo) GetBuyFourPrice() float32 {
	if m != nil {
		return m.BuyFourPrice
	}
	return 0
}

func (m *FiveBuyInfo) GetBuyFiveCount() int32 {
	if m != nil {
		return m.BuyFiveCount
	}
	return 0
}

func (m *FiveBuyInfo) GetBuyFivePrice() float32 {
	if m != nil {
		return m.BuyFivePrice
	}
	return 0
}

type FiveSellInfo struct {
	// 卖的五个
	SellOneCount         int32    `protobuf:"varint,1,opt,name=sellOneCount,proto3" json:"sellOneCount,omitempty"`
	SellOnePrice         float32  `protobuf:"fixed32,2,opt,name=sellOnePrice,proto3" json:"sellOnePrice,omitempty"`
	SellTwoCount         int32    `protobuf:"varint,3,opt,name=sellTwoCount,proto3" json:"sellTwoCount,omitempty"`
	SellTwoPrice         float32  `protobuf:"fixed32,4,opt,name=sellTwoPrice,proto3" json:"sellTwoPrice,omitempty"`
	SellThreeCount       int32    `protobuf:"varint,5,opt,name=sellThreeCount,proto3" json:"sellThreeCount,omitempty"`
	SellThreePrice       float32  `protobuf:"fixed32,6,opt,name=sellThreePrice,proto3" json:"sellThreePrice,omitempty"`
	SellFourCount        int32    `protobuf:"varint,7,opt,name=sellFourCount,proto3" json:"sellFourCount,omitempty"`
	SellFourPrice        float32  `protobuf:"fixed32,8,opt,name=sellFourPrice,proto3" json:"sellFourPrice,omitempty"`
	SellFiveCount        int32    `protobuf:"varint,9,opt,name=sellFiveCount,proto3" json:"sellFiveCount,omitempty"`
	SellFivePrice        float32  `protobuf:"fixed32,10,opt,name=sellFivePrice,proto3" json:"sellFivePrice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FiveSellInfo) Reset()         { *m = FiveSellInfo{} }
func (m *FiveSellInfo) String() string { return proto.CompactTextString(m) }
func (*FiveSellInfo) ProtoMessage()    {}
func (*FiveSellInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{9}
}

func (m *FiveSellInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FiveSellInfo.Unmarshal(m, b)
}
func (m *FiveSellInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FiveSellInfo.Marshal(b, m, deterministic)
}
func (m *FiveSellInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FiveSellInfo.Merge(m, src)
}
func (m *FiveSellInfo) XXX_Size() int {
	return xxx_messageInfo_FiveSellInfo.Size(m)
}
func (m *FiveSellInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FiveSellInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FiveSellInfo proto.InternalMessageInfo

func (m *FiveSellInfo) GetSellOneCount() int32 {
	if m != nil {
		return m.SellOneCount
	}
	return 0
}

func (m *FiveSellInfo) GetSellOnePrice() float32 {
	if m != nil {
		return m.SellOnePrice
	}
	return 0
}

func (m *FiveSellInfo) GetSellTwoCount() int32 {
	if m != nil {
		return m.SellTwoCount
	}
	return 0
}

func (m *FiveSellInfo) GetSellTwoPrice() float32 {
	if m != nil {
		return m.SellTwoPrice
	}
	return 0
}

func (m *FiveSellInfo) GetSellThreeCount() int32 {
	if m != nil {
		return m.SellThreeCount
	}
	return 0
}

func (m *FiveSellInfo) GetSellThreePrice() float32 {
	if m != nil {
		return m.SellThreePrice
	}
	return 0
}

func (m *FiveSellInfo) GetSellFourCount() int32 {
	if m != nil {
		return m.SellFourCount
	}
	return 0
}

func (m *FiveSellInfo) GetSellFourPrice() float32 {
	if m != nil {
		return m.SellFourPrice
	}
	return 0
}

func (m *FiveSellInfo) GetSellFiveCount() int32 {
	if m != nil {
		return m.SellFiveCount
	}
	return 0
}

func (m *FiveSellInfo) GetSellFivePrice() float32 {
	if m != nil {
		return m.SellFivePrice
	}
	return 0
}

type StockInfoResponse struct {
	Id                   int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StockName            string               `protobuf:"bytes,2,opt,name=stockName,proto3" json:"stockName,omitempty"`
	StockCode            string               `protobuf:"bytes,3,opt,name=stockCode,proto3" json:"stockCode,omitempty"`
	BaseInfo             *BasicInfo           `protobuf:"bytes,4,opt,name=baseInfo,proto3" json:"baseInfo,omitempty"`
	FiveBuyInfo          *FiveBuyInfo         `protobuf:"bytes,5,opt,name=fiveBuyInfo,proto3" json:"fiveBuyInfo,omitempty"`
	FiveSellInfo         *FiveSellInfo        `protobuf:"bytes,6,opt,name=fiveSellInfo,proto3" json:"fiveSellInfo,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,7,opt,name=Time,proto3" json:"Time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StockInfoResponse) Reset()         { *m = StockInfoResponse{} }
func (m *StockInfoResponse) String() string { return proto.CompactTextString(m) }
func (*StockInfoResponse) ProtoMessage()    {}
func (*StockInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{10}
}

func (m *StockInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StockInfoResponse.Unmarshal(m, b)
}
func (m *StockInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StockInfoResponse.Marshal(b, m, deterministic)
}
func (m *StockInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StockInfoResponse.Merge(m, src)
}
func (m *StockInfoResponse) XXX_Size() int {
	return xxx_messageInfo_StockInfoResponse.Size(m)
}
func (m *StockInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StockInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StockInfoResponse proto.InternalMessageInfo

func (m *StockInfoResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *StockInfoResponse) GetStockName() string {
	if m != nil {
		return m.StockName
	}
	return ""
}

func (m *StockInfoResponse) GetStockCode() string {
	if m != nil {
		return m.StockCode
	}
	return ""
}

func (m *StockInfoResponse) GetBaseInfo() *BasicInfo {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *StockInfoResponse) GetFiveBuyInfo() *FiveBuyInfo {
	if m != nil {
		return m.FiveBuyInfo
	}
	return nil
}

func (m *StockInfoResponse) GetFiveSellInfo() *FiveSellInfo {
	if m != nil {
		return m.FiveSellInfo
	}
	return nil
}

func (m *StockInfoResponse) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type StockBriefInfoResponse struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StockName            string   `protobuf:"bytes,2,opt,name=stockName,proto3" json:"stockName,omitempty"`
	StockCode            string   `protobuf:"bytes,3,opt,name=stockCode,proto3" json:"stockCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StockBriefInfoResponse) Reset()         { *m = StockBriefInfoResponse{} }
func (m *StockBriefInfoResponse) String() string { return proto.CompactTextString(m) }
func (*StockBriefInfoResponse) ProtoMessage()    {}
func (*StockBriefInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{11}
}

func (m *StockBriefInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StockBriefInfoResponse.Unmarshal(m, b)
}
func (m *StockBriefInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StockBriefInfoResponse.Marshal(b, m, deterministic)
}
func (m *StockBriefInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StockBriefInfoResponse.Merge(m, src)
}
func (m *StockBriefInfoResponse) XXX_Size() int {
	return xxx_messageInfo_StockBriefInfoResponse.Size(m)
}
func (m *StockBriefInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StockBriefInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StockBriefInfoResponse proto.InternalMessageInfo

func (m *StockBriefInfoResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *StockBriefInfoResponse) GetStockName() string {
	if m != nil {
		return m.StockName
	}
	return ""
}

func (m *StockBriefInfoResponse) GetStockCode() string {
	if m != nil {
		return m.StockCode
	}
	return ""
}

type StockListResponse struct {
	Total                int32                     `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data                 []*StockBriefInfoResponse `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *StockListResponse) Reset()         { *m = StockListResponse{} }
func (m *StockListResponse) String() string { return proto.CompactTextString(m) }
func (*StockListResponse) ProtoMessage()    {}
func (*StockListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c87a7814fbd674bd, []int{12}
}

func (m *StockListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StockListResponse.Unmarshal(m, b)
}
func (m *StockListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StockListResponse.Marshal(b, m, deterministic)
}
func (m *StockListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StockListResponse.Merge(m, src)
}
func (m *StockListResponse) XXX_Size() int {
	return xxx_messageInfo_StockListResponse.Size(m)
}
func (m *StockListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StockListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StockListResponse proto.InternalMessageInfo

func (m *StockListResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *StockListResponse) GetData() []*StockBriefInfoResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "stock.Empty")
	proto.RegisterType((*PageInfo)(nil), "stock.PageInfo")
	proto.RegisterType((*CodeRequest)(nil), "stock.CodeRequest")
	proto.RegisterType((*NameRequest)(nil), "stock.NameRequest")
	proto.RegisterType((*IdRequest)(nil), "stock.IdRequest")
	proto.RegisterType((*CreateStockInfo)(nil), "stock.CreateStockInfo")
	proto.RegisterType((*UpdateStockInfo)(nil), "stock.UpdateStockInfo")
	proto.RegisterType((*BasicInfo)(nil), "stock.BasicInfo")
	proto.RegisterType((*FiveBuyInfo)(nil), "stock.FiveBuyInfo")
	proto.RegisterType((*FiveSellInfo)(nil), "stock.FiveSellInfo")
	proto.RegisterType((*StockInfoResponse)(nil), "stock.StockInfoResponse")
	proto.RegisterType((*StockBriefInfoResponse)(nil), "stock.StockBriefInfoResponse")
	proto.RegisterType((*StockListResponse)(nil), "stock.StockListResponse")
}

func init() { proto.RegisterFile("stock.proto", fileDescriptor_c87a7814fbd674bd) }

var fileDescriptor_c87a7814fbd674bd = []byte{
	// 815 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x96, 0x5f, 0x6e, 0xfb, 0x44,
	0x10, 0xc7, 0x89, 0x13, 0xff, 0x9a, 0x8c, 0xd3, 0xa4, 0x2c, 0x55, 0x15, 0x85, 0x7f, 0xc1, 0x42,
	0x28, 0x42, 0x28, 0x85, 0x14, 0x09, 0xc1, 0x03, 0x88, 0x44, 0x14, 0x55, 0x82, 0xb6, 0x72, 0xcb,
	0x1b, 0x3c, 0x38, 0xf1, 0x26, 0xb5, 0x70, 0xbc, 0xc6, 0x5e, 0xb7, 0x32, 0x07, 0xe0, 0x34, 0x5c,
	0x86, 0xa3, 0x20, 0x71, 0x00, 0xe4, 0x59, 0xaf, 0x3d, 0x6b, 0x50, 0x5e, 0x10, 0x6f, 0xd9, 0xef,
	0x7e, 0xe6, 0xbb, 0xe3, 0x19, 0x7b, 0x27, 0xe0, 0x64, 0x52, 0x6c, 0x7f, 0x5e, 0x24, 0xa9, 0x90,
	0x82, 0xd9, 0xb8, 0x98, 0xbe, 0xbb, 0x17, 0x62, 0x1f, 0xf1, 0x4b, 0x14, 0x37, 0xf9, 0xee, 0x52,
	0x86, 0x07, 0x9e, 0x49, 0xff, 0x90, 0x28, 0xce, 0x3d, 0x01, 0xfb, 0x9b, 0x43, 0x22, 0x0b, 0xf7,
	0x63, 0xe8, 0xdf, 0xfb, 0x7b, 0x7e, 0x13, 0xef, 0x04, 0x1b, 0x81, 0x95, 0xc4, 0x93, 0xce, 0xac,
	0x33, 0x3f, 0xf5, 0xac, 0x24, 0x66, 0xe7, 0x60, 0x27, 0x0f, 0xe1, 0xaf, 0x7c, 0x62, 0xa1, 0xa4,
	0x16, 0xee, 0x7b, 0xe0, 0xac, 0x45, 0xc0, 0x3d, 0xfe, 0x4b, 0xce, 0x33, 0xc9, 0x18, 0xf4, 0xb6,
	0x22, 0xe0, 0x18, 0x36, 0xf0, 0xf0, 0x77, 0x89, 0xdc, 0xfa, 0x07, 0x8a, 0xc4, 0xfe, 0xa1, 0x46,
	0xca, 0xdf, 0xee, 0x9b, 0x30, 0xb8, 0x09, 0x34, 0x30, 0x02, 0x2b, 0x0c, 0x70, 0xbb, 0xeb, 0x59,
	0x61, 0xe0, 0x7e, 0x0f, 0xe3, 0x75, 0xca, 0x7d, 0xc9, 0x1f, 0xca, 0xa7, 0xc1, 0xdc, 0xde, 0x82,
	0x01, 0x3e, 0xda, 0x6d, 0x63, 0xd4, 0x08, 0xf5, 0x6e, 0x99, 0x18, 0x66, 0xab, 0x77, 0x4b, 0xc1,
	0xfd, 0x09, 0xc6, 0x3f, 0x24, 0x81, 0x61, 0xd7, 0x3a, 0xd1, 0xb4, 0xb7, 0x8e, 0xda, 0x77, 0xdb,
	0xf6, 0x7f, 0x58, 0x30, 0x58, 0xf9, 0x59, 0xb8, 0x45, 0xe7, 0x0f, 0x60, 0x24, 0x45, 0xe0, 0x17,
	0x77, 0x09, 0x8f, 0xef, 0xd3, 0x70, 0xab, 0xb2, 0xb5, 0xbc, 0x96, 0x5a, 0x72, 0x91, 0x9f, 0xc9,
	0x75, 0x24, 0x32, 0xae, 0x38, 0x4b, 0x71, 0xa6, 0xca, 0x5c, 0x18, 0x26, 0x29, 0xcf, 0x78, 0x2c,
	0x15, 0xd5, 0x45, 0xca, 0xd0, 0xca, 0xfc, 0x9e, 0xc2, 0xfd, 0x93, 0x02, 0x7a, 0x08, 0x34, 0x02,
	0x9b, 0x42, 0x3f, 0x12, 0x2f, 0x6a, 0xd3, 0xc6, 0xcd, 0x7a, 0xcd, 0xe6, 0x30, 0xde, 0xe6, 0x69,
	0xca, 0x63, 0xb9, 0xca, 0x0b, 0x85, 0xbc, 0x42, 0xa4, 0x2d, 0xb3, 0x0f, 0xe1, 0xac, 0x92, 0x1e,
	0x78, 0x14, 0x29, 0xf4, 0x04, 0xd1, 0x7f, 0xe8, 0xec, 0x1d, 0x00, 0x99, 0xfa, 0x71, 0xb6, 0x16,
	0x79, 0x2c, 0x27, 0xfd, 0x59, 0x67, 0x6e, 0x7b, 0x44, 0x61, 0x33, 0x70, 0x70, 0xf5, 0xf5, 0x01,
	0x81, 0x01, 0xda, 0x50, 0xc9, 0xfd, 0xd3, 0x02, 0xe7, 0x3a, 0x7c, 0xe6, 0xab, 0xbc, 0xc0, 0xaa,
	0xce, 0xc0, 0xd9, 0xe4, 0xc5, 0x5d, 0xcc, 0x95, 0x65, 0x07, 0x2d, 0xa9, 0xd4, 0x10, 0xb4, 0x98,
	0x54, 0xaa, 0x88, 0xc7, 0x17, 0xa1, 0x3c, 0xba, 0xb5, 0x87, 0x96, 0x1a, 0x82, 0x56, 0x92, 0x4a,
	0xec, 0x7d, 0x38, 0x2d, 0x97, 0x4f, 0x29, 0xaf, 0x32, 0xb1, 0xd1, 0xc5, 0x14, 0x29, 0x45, 0x6b,
	0x6a, 0x8a, 0x65, 0x67, 0x37, 0x79, 0x71, 0x2d, 0xf2, 0x54, 0x59, 0x9d, 0xa0, 0x95, 0xa1, 0x11,
	0x46, 0x19, 0xf5, 0x55, 0xf7, 0xa9, 0xa6, 0x99, 0xf0, 0xb9, 0x4a, 0x69, 0xd0, 0xf8, 0x68, 0x8d,
	0x30, 0xca, 0x07, 0x1a, 0x1f, 0xad, 0xb9, 0xbf, 0x75, 0x61, 0x58, 0xae, 0xca, 0x3e, 0x62, 0xd1,
	0x5d, 0x18, 0x66, 0x3c, 0x8a, 0x5a, 0x55, 0x37, 0x34, 0xc2, 0xd0, 0xba, 0x1b, 0x9a, 0x66, 0x5a,
	0x95, 0x37, 0x34, 0xc2, 0xd0, 0xda, 0x1b, 0x5a, 0xf9, 0xc9, 0xe0, 0xba, 0x5d, 0xfd, 0x96, 0x6a,
	0x70, 0xb4, 0xfe, 0x2d, 0xb5, 0x6c, 0x53, 0xa9, 0xb4, 0x3b, 0x60, 0x8a, 0x94, 0xa2, 0x3d, 0x30,
	0xc5, 0x9a, 0x6a, 0x75, 0xc1, 0x14, 0x29, 0x45, 0xfb, 0x60, 0x8a, 0xee, 0xef, 0x16, 0xbc, 0x5e,
	0x5f, 0x55, 0x1e, 0xcf, 0x12, 0x11, 0x67, 0x9c, 0x5c, 0x59, 0xf6, 0x7f, 0xbd, 0xb2, 0xd8, 0x47,
	0xd0, 0xdf, 0xf8, 0x19, 0xde, 0xfa, 0x58, 0x69, 0x67, 0x79, 0xb6, 0x50, 0x63, 0xa4, 0xbe, 0xc8,
	0xbc, 0x9a, 0x60, 0x9f, 0x82, 0xb3, 0x6b, 0xbe, 0x45, 0x2c, 0xba, 0xb3, 0x64, 0x55, 0x00, 0xf9,
	0x4a, 0x3d, 0x8a, 0xb1, 0xcf, 0x60, 0xb8, 0x23, 0x6f, 0x13, 0xf6, 0xc0, 0x59, 0xbe, 0x41, 0xc2,
	0xf4, 0x96, 0x67, 0x80, 0x6c, 0x01, 0xbd, 0xc7, 0xf0, 0xa0, 0x6e, 0x17, 0x67, 0x39, 0x5d, 0xa8,
	0x59, 0xb6, 0xd0, 0xb3, 0x6c, 0xf1, 0xa8, 0x67, 0x99, 0x87, 0x9c, 0x1b, 0xc0, 0x05, 0x56, 0x6b,
	0x95, 0x86, 0x7c, 0xf7, 0x7f, 0x95, 0xcc, 0xfd, 0xb1, 0xea, 0xc9, 0x77, 0x61, 0x26, 0xeb, 0x03,
	0xce, 0xc1, 0x96, 0x42, 0xfa, 0x51, 0x75, 0x86, 0x5a, 0xb0, 0x4f, 0xa0, 0x17, 0xf8, 0xd2, 0x9f,
	0x58, 0xb3, 0xee, 0xdc, 0x59, 0xbe, 0x5d, 0x3d, 0xf1, 0xbf, 0xe7, 0xe8, 0x21, 0xba, 0xfc, 0xcb,
	0x02, 0x1b, 0x01, 0xf6, 0x39, 0x0c, 0xbf, 0xe5, 0xb2, 0x3e, 0x8a, 0x8d, 0xab, 0x70, 0x3d, 0xa5,
	0xa7, 0x13, 0xea, 0x67, 0x64, 0xf3, 0x25, 0x8c, 0x74, 0xe8, 0xaa, 0xc0, 0x3e, 0xeb, 0x26, 0x91,
	0x81, 0x6d, 0xc6, 0x1b, 0xe5, 0x32, 0xe2, 0xb1, 0x24, 0x3a, 0x9e, 0x4c, 0xf3, 0x23, 0xf1, 0x5f,
	0x34, 0xa9, 0xaf, 0x8a, 0x9b, 0x80, 0xe9, 0x77, 0xaa, 0x1e, 0xf4, 0x47, 0x62, 0xbf, 0x02, 0x87,
	0x8c, 0x7c, 0x76, 0xa1, 0x13, 0x37, 0xff, 0x06, 0x1c, 0x31, 0xb8, 0x02, 0x87, 0x0c, 0xf9, 0xda,
	0xa0, 0x35, 0xf8, 0xa7, 0xc3, 0x4a, 0xc7, 0x7f, 0x3f, 0xf7, 0xaf, 0x6d, 0x5e, 0xe1, 0x6b, 0x75,
	0xf5, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x42, 0x5a, 0xf6, 0x50, 0x46, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StockClient is the client API for Stock service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StockClient interface {
	GetStockList(ctx context.Context, in *PageInfo, opts ...grpc.CallOption) (*StockListResponse, error)
	GetStockByCode(ctx context.Context, in *CodeRequest, opts ...grpc.CallOption) (*StockInfoResponse, error)
	GetStockByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*StockInfoResponse, error)
	GetStockById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*StockInfoResponse, error)
	CreateStock(ctx context.Context, in *CreateStockInfo, opts ...grpc.CallOption) (*StockInfoResponse, error)
	UpdateStock(ctx context.Context, in *UpdateStockInfo, opts ...grpc.CallOption) (*Empty, error)
}

type stockClient struct {
	cc *grpc.ClientConn
}

func NewStockClient(cc *grpc.ClientConn) StockClient {
	return &stockClient{cc}
}

func (c *stockClient) GetStockList(ctx context.Context, in *PageInfo, opts ...grpc.CallOption) (*StockListResponse, error) {
	out := new(StockListResponse)
	err := c.cc.Invoke(ctx, "/stock.Stock/GetStockList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stockClient) GetStockByCode(ctx context.Context, in *CodeRequest, opts ...grpc.CallOption) (*StockInfoResponse, error) {
	out := new(StockInfoResponse)
	err := c.cc.Invoke(ctx, "/stock.Stock/GetStockByCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stockClient) GetStockByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*StockInfoResponse, error) {
	out := new(StockInfoResponse)
	err := c.cc.Invoke(ctx, "/stock.Stock/GetStockByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stockClient) GetStockById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*StockInfoResponse, error) {
	out := new(StockInfoResponse)
	err := c.cc.Invoke(ctx, "/stock.Stock/GetStockById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stockClient) CreateStock(ctx context.Context, in *CreateStockInfo, opts ...grpc.CallOption) (*StockInfoResponse, error) {
	out := new(StockInfoResponse)
	err := c.cc.Invoke(ctx, "/stock.Stock/CreateStock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stockClient) UpdateStock(ctx context.Context, in *UpdateStockInfo, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/stock.Stock/UpdateStock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StockServer is the server API for Stock service.
type StockServer interface {
	GetStockList(context.Context, *PageInfo) (*StockListResponse, error)
	GetStockByCode(context.Context, *CodeRequest) (*StockInfoResponse, error)
	GetStockByName(context.Context, *NameRequest) (*StockInfoResponse, error)
	GetStockById(context.Context, *IdRequest) (*StockInfoResponse, error)
	CreateStock(context.Context, *CreateStockInfo) (*StockInfoResponse, error)
	UpdateStock(context.Context, *UpdateStockInfo) (*Empty, error)
}

// UnimplementedStockServer can be embedded to have forward compatible implementations.
type UnimplementedStockServer struct {
}

func (*UnimplementedStockServer) GetStockList(ctx context.Context, req *PageInfo) (*StockListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStockList not implemented")
}
func (*UnimplementedStockServer) GetStockByCode(ctx context.Context, req *CodeRequest) (*StockInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStockByCode not implemented")
}
func (*UnimplementedStockServer) GetStockByName(ctx context.Context, req *NameRequest) (*StockInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStockByName not implemented")
}
func (*UnimplementedStockServer) GetStockById(ctx context.Context, req *IdRequest) (*StockInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStockById not implemented")
}
func (*UnimplementedStockServer) CreateStock(ctx context.Context, req *CreateStockInfo) (*StockInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStock not implemented")
}
func (*UnimplementedStockServer) UpdateStock(ctx context.Context, req *UpdateStockInfo) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStock not implemented")
}

func RegisterStockServer(s *grpc.Server, srv StockServer) {
	s.RegisterService(&_Stock_serviceDesc, srv)
}

func _Stock_GetStockList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PageInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockServer).GetStockList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stock.Stock/GetStockList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockServer).GetStockList(ctx, req.(*PageInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stock_GetStockByCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockServer).GetStockByCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stock.Stock/GetStockByCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockServer).GetStockByCode(ctx, req.(*CodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stock_GetStockByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockServer).GetStockByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stock.Stock/GetStockByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockServer).GetStockByName(ctx, req.(*NameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stock_GetStockById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockServer).GetStockById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stock.Stock/GetStockById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockServer).GetStockById(ctx, req.(*IdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stock_CreateStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStockInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockServer).CreateStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stock.Stock/CreateStock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockServer).CreateStock(ctx, req.(*CreateStockInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stock_UpdateStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStockInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockServer).UpdateStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stock.Stock/UpdateStock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockServer).UpdateStock(ctx, req.(*UpdateStockInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _Stock_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stock.Stock",
	HandlerType: (*StockServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStockList",
			Handler:    _Stock_GetStockList_Handler,
		},
		{
			MethodName: "GetStockByCode",
			Handler:    _Stock_GetStockByCode_Handler,
		},
		{
			MethodName: "GetStockByName",
			Handler:    _Stock_GetStockByName_Handler,
		},
		{
			MethodName: "GetStockById",
			Handler:    _Stock_GetStockById_Handler,
		},
		{
			MethodName: "CreateStock",
			Handler:    _Stock_CreateStock_Handler,
		},
		{
			MethodName: "UpdateStock",
			Handler:    _Stock_UpdateStock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stock.proto",
}
