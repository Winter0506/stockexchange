// Code generated by goctl. DO NOT EDIT!
// Source: stock.proto

package stockclient

import (
	"context"

	"stockexchange/rpc/stock/stock"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BasicInfo              = stock.BasicInfo
	CodeRequest            = stock.CodeRequest
	CreateStockInfo        = stock.CreateStockInfo
	Empty                  = stock.Empty
	FiveBuyInfo            = stock.FiveBuyInfo
	FiveSellInfo           = stock.FiveSellInfo
	IdRequest              = stock.IdRequest
	NameRequest            = stock.NameRequest
	PageInfo               = stock.PageInfo
	StockBriefInfoResponse = stock.StockBriefInfoResponse
	StockInfoResponse      = stock.StockInfoResponse
	StockListResponse      = stock.StockListResponse
	UpdateStockInfo        = stock.UpdateStockInfo

	Stock interface {
		GetStockList(ctx context.Context, in *PageInfo, opts ...grpc.CallOption) (*StockListResponse, error)
		GetStockByCode(ctx context.Context, in *CodeRequest, opts ...grpc.CallOption) (*StockInfoResponse, error)
		GetStockByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*StockInfoResponse, error)
		GetStockById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*StockInfoResponse, error)
		CreateStock(ctx context.Context, in *CreateStockInfo, opts ...grpc.CallOption) (*StockInfoResponse, error)
		UpdateStock(ctx context.Context, in *UpdateStockInfo, opts ...grpc.CallOption) (*Empty, error)
	}

	defaultStock struct {
		cli zrpc.Client
	}
)

func NewStock(cli zrpc.Client) Stock {
	return &defaultStock{
		cli: cli,
	}
}

func (m *defaultStock) GetStockList(ctx context.Context, in *PageInfo, opts ...grpc.CallOption) (*StockListResponse, error) {
	client := stock.NewStockClient(m.cli.Conn())
	return client.GetStockList(ctx, in, opts...)
}

func (m *defaultStock) GetStockByCode(ctx context.Context, in *CodeRequest, opts ...grpc.CallOption) (*StockInfoResponse, error) {
	client := stock.NewStockClient(m.cli.Conn())
	return client.GetStockByCode(ctx, in, opts...)
}

func (m *defaultStock) GetStockByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*StockInfoResponse, error) {
	client := stock.NewStockClient(m.cli.Conn())
	return client.GetStockByName(ctx, in, opts...)
}

func (m *defaultStock) GetStockById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*StockInfoResponse, error) {
	client := stock.NewStockClient(m.cli.Conn())
	return client.GetStockById(ctx, in, opts...)
}

func (m *defaultStock) CreateStock(ctx context.Context, in *CreateStockInfo, opts ...grpc.CallOption) (*StockInfoResponse, error) {
	client := stock.NewStockClient(m.cli.Conn())
	return client.CreateStock(ctx, in, opts...)
}

func (m *defaultStock) UpdateStock(ctx context.Context, in *UpdateStockInfo, opts ...grpc.CallOption) (*Empty, error) {
	client := stock.NewStockClient(m.cli.Conn())
	return client.UpdateStock(ctx, in, opts...)
}
