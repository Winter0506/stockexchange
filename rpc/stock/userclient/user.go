// Code generated by goctl. DO NOT EDIT!
// Source: stock.proto

package userclient

import (
	"context"

	"stockexchange/rpc/stock/user"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BasicInfo              = user.BasicInfo
	CodeRequest            = user.CodeRequest
	CreateStockInfo        = user.CreateStockInfo
	Empty                  = user.Empty
	FiveBuyInfo            = user.FiveBuyInfo
	FiveSellInfo           = user.FiveSellInfo
	IdRequest              = user.IdRequest
	NameRequest            = user.NameRequest
	PageInfo               = user.PageInfo
	StockBriefInfoResponse = user.StockBriefInfoResponse
	StockInfoResponse      = user.StockInfoResponse
	StockListResponse      = user.StockListResponse
	UpdateStockInfo        = user.UpdateStockInfo

	User interface {
		GetStockList(ctx context.Context, in *PageInfo, opts ...grpc.CallOption) (*StockListResponse, error)
		GetStockByCode(ctx context.Context, in *CodeRequest, opts ...grpc.CallOption) (*StockInfoResponse, error)
		GetStockByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*StockInfoResponse, error)
		GetStockById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*StockInfoResponse, error)
		CreateStock(ctx context.Context, in *CreateStockInfo, opts ...grpc.CallOption) (*StockInfoResponse, error)
		UpdateStock(ctx context.Context, in *UpdateStockInfo, opts ...grpc.CallOption) (*Empty, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) GetStockList(ctx context.Context, in *PageInfo, opts ...grpc.CallOption) (*StockListResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetStockList(ctx, in, opts...)
}

func (m *defaultUser) GetStockByCode(ctx context.Context, in *CodeRequest, opts ...grpc.CallOption) (*StockInfoResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetStockByCode(ctx, in, opts...)
}

func (m *defaultUser) GetStockByName(ctx context.Context, in *NameRequest, opts ...grpc.CallOption) (*StockInfoResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetStockByName(ctx, in, opts...)
}

func (m *defaultUser) GetStockById(ctx context.Context, in *IdRequest, opts ...grpc.CallOption) (*StockInfoResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetStockById(ctx, in, opts...)
}

func (m *defaultUser) CreateStock(ctx context.Context, in *CreateStockInfo, opts ...grpc.CallOption) (*StockInfoResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.CreateStock(ctx, in, opts...)
}

func (m *defaultUser) UpdateStock(ctx context.Context, in *UpdateStockInfo, opts ...grpc.CallOption) (*Empty, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.UpdateStock(ctx, in, opts...)
}
